webpackJsonp([3],{"0lR7":function(module,__webpack_exports__,__webpack_require__){"use strict";eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n\n// EXTERNAL MODULE: ./src/Components/CardLine.vue + 4 modules\nvar CardLine = __webpack_require__(\"F2lq\");\n\n// EXTERNAL MODULE: ./src/Components/CardBar.vue + 4 modules\nvar CardBar = __webpack_require__(\"kQ2W\");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/MoneyBallPanel.vue\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var MoneyBallPanel = ({\n  name: 'MoneyBallPanel',\n  data: function data() {\n    return {\n      stats: [{\n        id: 0,\n        type: 'line',\n        title: '1.46',\n        subtitle: 'The sharpest fall in the scoring rate occurs in the seventh over',\n        description: 'Captains are using their most experienced bowlers just after the powerplay and at the death',\n        data: {\n          labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'],\n          datasets: [{\n            label: 'Run Rate',\n            backgroundColor: 'rgba(123,69,100,1)',\n            data: [5.92894280762565, 6.920277296360485, 7.516464471403813, 7.89948006932409, 7.901213171577123, 7.993934142114385, 6.528596187175044, 7.008665511265165, 7.170138888888889, 7.032118055555555, 7.400696864111498, 7.629597197898423, 7.603690685413005, 7.809859154929577, 8.088028169014084, 8.291519434628976, 8.69538188277087, 8.810714285714285, 8.472072072072072, 7.906764168190128],\n            borderColor: 'rgba(0,0,0,0.5)',\n            lineTension: 0,\n            pointBackgroundColor: 'rgba(102,109,145,1)',\n            fill: true\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 5\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: true,\n                autoSkipPadding: 20,\n                maxRotation: 0\n              }\n            }]\n          },\n          legend: {\n            display: false\n          },\n          layout: {\n            padding: {\n              top: 20\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      }, {\n        id: 1,\n        type: 'bar',\n        title: 'Not always the batsmen',\n        subtitle: 'Amit Mishra has the highest number of Man of the Match awards amongst all bowlers',\n        description: '9 bowlers make it into the list of top 50 most awarded players',\n        data: {\n          labels: ['A Mishra', 'U Yadav', 'A Nehra', 'H Singh', 'S Malinga', 'D Steyn', 'S Warne'],\n          datasets: [{\n            label: 'MOTM Awards',\n            backgroundColor: 'rgba(80,120,174,1)',\n            data: [9, 6, 6, 6, 5, 5, 4],\n            borderColor: 'rgba(0,0,0,0.5)'\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 5\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: true,\n                autoSkipPadding: 20,\n                maxRotation: 0\n              }\n            }]\n          },\n          legend: {\n            display: false\n          },\n          layout: {\n            padding: {\n              top: 20\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      }]\n    };\n  },\n\n  components: {\n    cardLine: CardLine[\"a\" /* default */], cardBar: CardBar[\"a\" /* default */]\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7c033272\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Components/MoneyBallPanel.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_vm._l((_vm.stats),function(stat){return (stat.type == 'line')?_c('cardLine',{key:stat.id,attrs:{\"data\":stat.data,\"options\":stat.options,\"title\":stat.title,\"subtitle\":stat.subtitle,\"description\":stat.description}}):_vm._e()}),_vm._v(\" \"),_vm._l((_vm.stats),function(stat){return (stat.type == 'bar')?_c('cardBar',{key:stat.id,attrs:{\"data\":stat.data,\"options\":stat.options,\"title\":stat.title,\"subtitle\":stat.subtitle,\"description\":stat.description}}):_vm._e()})],2)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var Components_MoneyBallPanel = (esExports);\n// CONCATENATED MODULE: ./src/Components/MoneyBallPanel.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__(\"fqHO\")\n}\nvar normalizeComponent = __webpack_require__(\"VU/8\")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7c033272\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  MoneyBallPanel,\n  Components_MoneyBallPanel,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_Components_MoneyBallPanel = __webpack_exports__[\"default\"] = (Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0lR7\n")},fqHO:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnFITy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL01vbmV5QmFsbFBhbmVsLnZ1ZT80MTRkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcIm9taXRcIjoxLFwicmVtb3ZlXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlciEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTdjMDMzMjcyXCIsXCJzY29wZWRcIjp0cnVlLFwiaGFzSW5saW5lQ29uZmlnXCI6ZmFsc2V9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9zcmMvQ29tcG9uZW50cy9Nb25leUJhbGxQYW5lbC52dWVcbi8vIG1vZHVsZSBpZCA9IGZxSE9cbi8vIG1vZHVsZSBjaHVua3MgPSAzIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///fqHO\n")}});