webpackJsonp([0],{ANeN:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQU5lTi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL1Bob3RvRmluaXNoUGFuZWwudnVlP2VjZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1wib21pdFwiOjEsXCJyZW1vdmVcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtZTkxMDFmMmVcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9Db21wb25lbnRzL1Bob3RvRmluaXNoUGFuZWwudnVlXG4vLyBtb2R1bGUgaWQgPSBBTmVOXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///ANeN\n")},M8wc:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTTh3Yy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL0NhcmRQb2xhci52dWU/YjIyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9kaXN0L2xvYWRlci5qcz97XCJvbWl0XCI6MSxcInJlbW92ZVwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJzb3VyY2VNYXBcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi02NTI0NWEwNFwiLFwic2NvcGVkXCI6dHJ1ZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXN0eWxlcyZpbmRleD0wIS4vc3JjL0NvbXBvbmVudHMvQ2FyZFBvbGFyLnZ1ZVxuLy8gbW9kdWxlIGlkID0gTTh3Y1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///M8wc\n")},u3WE:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n\n// EXTERNAL MODULE: ./src/Components/CardLine.vue + 4 modules\nvar CardLine = __webpack_require__("F2lq");\n\n// EXTERNAL MODULE: ./src/Components/Card.vue + 2 modules\nvar Card = __webpack_require__("Ygga");\n\n// EXTERNAL MODULE: ./node_modules/vue-chartjs/es/index.js + 2 modules\nvar es = __webpack_require__("UlOv");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/polarChart.vue\n\n\n\n/* harmony default export */ var polarChart = ({\n  extends: es["d" /* PolarArea */],\n  props: [\'data\', \'options\'],\n  mounted: function mounted() {\n    // Overwriting base render method with actual data.\n    this.renderChart(this.data, this.options);\n  }\n});\n// CONCATENATED MODULE: ./src/Components/polarChart.vue\nvar normalizeComponent = __webpack_require__("VU/8")\n/* script */\n\n\n/* template */\nvar __vue_template__ = null\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  polarChart,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var Components_polarChart = (Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/CardPolar.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var CardPolar = ({\n  name: \'CardPolar\',\n  data: function data() {\n    return {};\n  },\n\n  props: [\'title\', \'subtitle\', \'description\', \'data\', \'options\'],\n  components: {\n    card: Card["a" /* default */], polarChart: Components_polarChart\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-65245a04","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Components/CardPolar.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row cardGraph"},[_c(\'div\',{staticClass:"col-md-4"},[_c(\'card\',{attrs:{"title":_vm.title,"subtitle":_vm.subtitle,"description":_vm.description}})],1),_vm._v(" "),_c(\'div\',{staticClass:"col-md-8"},[_c(\'polarChart\',{staticClass:"bar",attrs:{"data":_vm.data,"options":_vm.options}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var Components_CardPolar = (esExports);\n// CONCATENATED MODULE: ./src/Components/CardPolar.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__("M8wc")\n}\nvar CardPolar_normalizeComponent = __webpack_require__("VU/8")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar CardPolar___vue_template_functional__ = false\n/* styles */\nvar CardPolar___vue_styles__ = injectStyle\n/* scopeId */\nvar CardPolar___vue_scopeId__ = "data-v-65245a04"\n/* moduleIdentifier (server only) */\nvar CardPolar___vue_module_identifier__ = null\nvar CardPolar_Component = CardPolar_normalizeComponent(\n  CardPolar,\n  Components_CardPolar,\n  CardPolar___vue_template_functional__,\n  CardPolar___vue_styles__,\n  CardPolar___vue_scopeId__,\n  CardPolar___vue_module_identifier__\n)\n\n/* harmony default export */ var src_Components_CardPolar = (CardPolar_Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/PhotoFinishPanel.vue\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var PhotoFinishPanel = ({\n  name: \'PhotoFinishPanel\',\n  data: function data() {\n    return {\n      stats: [{\n        id: 0,\n        type: \'line\',\n        title: \'Down to the wire\',\n        subtitle: \'Matches won by less than 10 runs, or less than 3 wickets, across seasons\',\n        description: \'Roughly one in every five games is settled this way, when considering all games through all seasons\',\n        data: {\n          labels: [\'Season 1\', \'Season 2\', \'Season 3\', \'Season 4\', \'Season 5\', \'Season 6\', \'Season 7\', \'Season 8\', \'Season 9\'],\n          datasets: [{\n            label: \'Wins by <10 runs\',\n            backgroundColor: \'rgba(123,69,100,1)\',\n            data: [9, 7, 4, 6, 7, 8, 4, 9, 7],\n            borderColor: \'rgba(0,0,0,0.5)\',\n            lineTension: 0,\n            pointBackgroundColor: \'rgba(202,19,145,1)\',\n            fill: false\n          }, {\n            label: \'Wins by <3 wickets\',\n            backgroundColor: \'rgba(123,69,100,1)\',\n            data: [4, 3, 0, 2, 1, 1, 1, 4, 3],\n            borderColor: \'rgba(0,0,0,0.5)\',\n            lineTension: 0,\n            pointBackgroundColor: \'rgba(12,169,145,1)\',\n            fill: false\n          }]\n        },\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 5\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                autoSkip: true,\n                autoSkipPadding: 20,\n                maxRotation: 0\n              }\n            }]\n          },\n          legend: {\n            display: false\n          },\n          layout: {\n            padding: {\n              top: 20\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      }, {\n        id: 1,\n        type: \'polar\',\n        title: \'...every other game\',\n        subtitle: \'45% of all matches are won in the last four overs by the team batting second\',\n        description: \'Of these, more than half are settled only in the final two overs\',\n        data: {\n          labels: [\'17th\', \'18th\', \'19th\', \'20th\'],\n          datasets: [{\n            backgroundColor: [\'rgba(0,220,174,1)\', \'rgba(0,159,239,1)\', \'rgba(255,207,69,1)\', \'rgba(255,68,123,1)\', \'rgba(130, 150, 190, 1)\'],\n            borderColor: \'rgba(0,0,0,0.3)\',\n            data: [21, 40, 80, 118]\n          }]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scale: {\n            ticks: {\n              display: false,\n              min: 0,\n              max: 120,\n              stepSize: 20\n            },\n            gridLines: {\n              display: true,\n              drawBorder: false,\n              lineWidth: 0.2\n            },\n            pointLabels: {\n              display: true\n            }\n          },\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      }]\n    };\n  },\n\n  components: {\n    cardLine: CardLine["a" /* default */], cardPolar: src_Components_CardPolar\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-e9101f2e","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Components/PhotoFinishPanel.vue\nvar PhotoFinishPanel_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{},[_vm._l((_vm.stats),function(stat){return (stat.type == \'line\')?_c(\'cardLine\',{key:stat.id,attrs:{"data":stat.data,"options":stat.options,"title":stat.title,"subtitle":stat.subtitle,"description":stat.description}}):_vm._e()}),_vm._v(" "),_vm._l((_vm.stats),function(stat){return (stat.type == \'polar\')?_c(\'cardPolar\',{key:stat.id,attrs:{"title":stat.title,"subtitle":stat.subtitle,"description":stat.description,"data":stat.data,"options":stat.options}}):_vm._e()})],2)}\nvar PhotoFinishPanel_staticRenderFns = []\nvar PhotoFinishPanel_esExports = { render: PhotoFinishPanel_render, staticRenderFns: PhotoFinishPanel_staticRenderFns }\n/* harmony default export */ var Components_PhotoFinishPanel = (PhotoFinishPanel_esExports);\n// CONCATENATED MODULE: ./src/Components/PhotoFinishPanel.vue\nfunction PhotoFinishPanel_injectStyle (ssrContext) {\n  __webpack_require__("ANeN")\n}\nvar PhotoFinishPanel_normalizeComponent = __webpack_require__("VU/8")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar PhotoFinishPanel___vue_template_functional__ = false\n/* styles */\nvar PhotoFinishPanel___vue_styles__ = PhotoFinishPanel_injectStyle\n/* scopeId */\nvar PhotoFinishPanel___vue_scopeId__ = "data-v-e9101f2e"\n/* moduleIdentifier (server only) */\nvar PhotoFinishPanel___vue_module_identifier__ = null\nvar PhotoFinishPanel_Component = PhotoFinishPanel_normalizeComponent(\n  PhotoFinishPanel,\n  Components_PhotoFinishPanel,\n  PhotoFinishPanel___vue_template_functional__,\n  PhotoFinishPanel___vue_styles__,\n  PhotoFinishPanel___vue_scopeId__,\n  PhotoFinishPanel___vue_module_identifier__\n)\n\n/* harmony default export */ var src_Components_PhotoFinishPanel = __webpack_exports__["default"] = (PhotoFinishPanel_Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///u3WE\n')}});