webpackJsonp([2],{cWj1:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n\n// EXTERNAL MODULE: ./src/Components/Card.vue + 2 modules\nvar Card = __webpack_require__("Ygga");\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/CardGeo.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n/* harmony default export */ var CardGeo = ({\n  name: \'CardGeo\',\n  data: function data() {\n    return {};\n  },\n\n  props: [\'title\', \'subtitle\', \'description\', \'data\', \'library\'],\n  components: {\n    card: Card["a" /* default */]\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-1312cda2","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Components/CardGeo.vue\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"row cardGraph"},[_c(\'div\',{staticClass:"col-md-4"},[_c(\'card\',{attrs:{"title":_vm.title,"subtitle":_vm.subtitle,"description":_vm.description}})],1),_vm._v(" "),_c(\'div\',{staticClass:"col-md-8"},[_c(\'geo-chart\',{staticClass:"geo",attrs:{"data":_vm.data,"library":_vm.library}})],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var Components_CardGeo = (esExports);\n// CONCATENATED MODULE: ./src/Components/CardGeo.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__("uHSc")\n}\nvar normalizeComponent = __webpack_require__("VU/8")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = "data-v-1312cda2"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  CardGeo,\n  Components_CardGeo,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var src_Components_CardGeo = (Component.exports);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./src/Components/PanIndiaPanel.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\n\n/* harmony default export */ var PanIndiaPanel = ({\n  name: \'PanIndiaPanel\',\n  data: function data() {\n    return {\n      title: \'Bharat\',\n      stats: [{\n        id: 0,\n        type: \'geo\',\n        title: \'77\',\n        subtitle: \'The highest number of matches hosted by a stadium across seasons\',\n        description: \'Wankhede Stadium, Mumbai\',\n        data: [[\'Bangalore\', 58], [\'Chandigarh\', 42], [\'Delhi\', 53], [\'Mumbai\', 77], [\'Kolkata\', 54], [\'Jaipur\', 33], [\'Hyderabad\', 41], [\'Chennai\', 48], [\'Ahmedabad\', 12], [\'Cuttack\', 7], [\'Nagpur\', 3], [\'Dharamsala\', 9], [\'Kochi\', 5], [\'Indore\', 2], [\'Visakhapatnam\', 11], [\'Pune\', 25], [\'Raipur\', 6], [\'Ranchi\', 7], [\'Rajkot\', 5], [\'Kanpur\', 2]],\n        library: {\n          sizeAxis: { minValue: 0, maxValue: 100 },\n          displayMode: \'markers\',\n          region: \'IN\',\n          resolution: \'provinces\',\n          colorAxis: { colors: [\'orange\', \'red\'] }\n        }\n      }, {\n        id: 1,\n        type: \'text-only\',\n        title: \'Rajkot\',\n        subtitle: \'The most recent addition to the ever-increasing list of host cities.\',\n        description: \'Up from 8 in the inaugaral edition to 11.\'\n      }]\n    };\n  },\n\n  components: {\n    card: Card["a" /* default */], cardGeo: src_Components_CardGeo\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-978fd202","hasScoped":true,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/Components/PanIndiaPanel.vue\nvar PanIndiaPanel_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{},[_vm._l((_vm.stats),function(stat){return (stat.type == \'geo\')?_c(\'cardGeo\',{key:stat.id,attrs:{"data":stat.data,"library":stat.library,"title":stat.title,"subtitle":stat.subtitle,"description":stat.description}}):_vm._e()}),_vm._v(" "),_c(\'div\',{staticClass:"row cardGraph"},[_c(\'div\',{staticClass:"col-md-4"},_vm._l((_vm.stats),function(stat){return (stat.type == \'text-only\')?_c(\'card\',{attrs:{"title":stat.title,"subtitle":stat.subtitle,"description":stat.description}}):_vm._e()}))])],2)}\nvar PanIndiaPanel_staticRenderFns = []\nvar PanIndiaPanel_esExports = { render: PanIndiaPanel_render, staticRenderFns: PanIndiaPanel_staticRenderFns }\n/* harmony default export */ var Components_PanIndiaPanel = (PanIndiaPanel_esExports);\n// CONCATENATED MODULE: ./src/Components/PanIndiaPanel.vue\nfunction PanIndiaPanel_injectStyle (ssrContext) {\n  __webpack_require__("qpqR")\n}\nvar PanIndiaPanel_normalizeComponent = __webpack_require__("VU/8")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar PanIndiaPanel___vue_template_functional__ = false\n/* styles */\nvar PanIndiaPanel___vue_styles__ = PanIndiaPanel_injectStyle\n/* scopeId */\nvar PanIndiaPanel___vue_scopeId__ = "data-v-978fd202"\n/* moduleIdentifier (server only) */\nvar PanIndiaPanel___vue_module_identifier__ = null\nvar PanIndiaPanel_Component = PanIndiaPanel_normalizeComponent(\n  PanIndiaPanel,\n  Components_PanIndiaPanel,\n  PanIndiaPanel___vue_template_functional__,\n  PanIndiaPanel___vue_styles__,\n  PanIndiaPanel___vue_scopeId__,\n  PanIndiaPanel___vue_module_identifier__\n)\n\n/* harmony default export */ var src_Components_PanIndiaPanel = __webpack_exports__["default"] = (PanIndiaPanel_Component.exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///cWj1\n')},qpqR:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXBxUi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL1BhbkluZGlhUGFuZWwudnVlPzg5MmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1wib21pdFwiOjEsXCJyZW1vdmVcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtOTc4ZmQyMDJcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9Db21wb25lbnRzL1BhbkluZGlhUGFuZWwudnVlXG4vLyBtb2R1bGUgaWQgPSBxcHFSXG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///qpqR\n")},uHSc:function(module,exports){eval("// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidUhTYy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9Db21wb25lbnRzL0NhcmRHZW8udnVlPzdmYjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL25vZGVfbW9kdWxlcy9leHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4vZGlzdC9sb2FkZXIuanM/e1wib21pdFwiOjEsXCJyZW1vdmVcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtc3R5bGUtbG9hZGVyIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXI/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtMTMxMmNkYTJcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL3NyYy9Db21wb25lbnRzL0NhcmRHZW8udnVlXG4vLyBtb2R1bGUgaWQgPSB1SFNjXG4vLyBtb2R1bGUgY2h1bmtzID0gMiJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///uHSc\n")}});